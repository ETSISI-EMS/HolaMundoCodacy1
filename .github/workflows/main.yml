name: Codacy CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test & Codacy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto

      - name: Build and generate coverage report
        run: mvn clean verify

      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: target/site/jacoco/jacoco.xml
            
      # Esperar unos segundos para que Codacy termine el análisis      
      - name: Wait for Codacy Analysis
        run: sleep 30

      # Consultar Quality Gate de Codacy
      - name: Query Codacy Quality Gate
        id: codacyQualityGate
        uses: fjogeleit/http-request-action@v1.15.2
        with:
          url: 'https://api.codacy.com/2.0/commit/${{ github.sha }}/resultsFinal'
          method: 'GET'
          customHeaders: '{"api-token": "${{ secrets.CODACY_API_TOKEN }}"}'

      # Mostrar estado del Quality Gate
      - name: Show Codacy Quality Gate Status
        run: 'echo "Codacy Quality Gate status: ${{ fromJson(steps.codacyQualityGate.outputs.response).state }}"'                             

      # Fallar workflow si el Quality Gate falla
      - name: Fail if Quality Gate not passed
        if: ${{ fromJson(steps.codacyQualityGate.outputs.response).state != 'Passed' }}
        uses: actions/github-script@v7.0.1
        with:
          script: |
            core.setFailed('❌ Codacy Quality Gate not passed!')
